[
  {
    "objectID": "Homework5.html",
    "href": "Homework5.html",
    "title": "Homework 5",
    "section": "",
    "text": "We begin by loading the tidyverse as we will use it throughout this assignment.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nWe start Task 1 by reading in the data in two different ways.\nFirst, we modify the code provided with the download to read in the data from a local file source and combine the two data frames. We use local paths.\n\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nhead(d3)\n\n  school sex age address famsize Pstatus Medu Fedu     Mjob     Fjob     reason\n1     GP   F  15       R     GT3       T    1    1  at_home    other       home\n2     GP   F  15       R     GT3       T    1    1    other    other reputation\n3     GP   F  15       R     GT3       T    2    2  at_home    other reputation\n4     GP   F  15       R     GT3       T    2    4 services   health     course\n5     GP   F  15       R     GT3       T    3    3 services services reputation\n6     GP   F  15       R     GT3       T    3    4 services   health     course\n  nursery internet guardian.x traveltime.x studytime.x failures.x schoolsup.x\n1     yes      yes     mother            2           4          1         yes\n2      no      yes     mother            1           2          2         yes\n3     yes       no     mother            1           1          0         yes\n4     yes      yes     mother            1           3          0         yes\n5     yes      yes      other            2           3          2          no\n6     yes      yes     mother            1           3          0         yes\n  famsup.x paid.x activities.x higher.x romantic.x famrel.x freetime.x goout.x\n1      yes    yes          yes      yes         no        3          1       2\n2      yes     no           no      yes        yes        3          3       4\n3      yes    yes          yes      yes         no        4          3       1\n4      yes    yes          yes      yes         no        4          3       2\n5      yes    yes          yes      yes        yes        4          2       1\n6      yes    yes          yes      yes         no        4          3       2\n  Dalc.x Walc.x health.x absences.x G1.x G2.x G3.x guardian.y traveltime.y\n1      1      1        1          2    7   10   10     mother            2\n2      2      4        5          2    8    6    5     mother            1\n3      1      1        2          8   14   13   13     mother            1\n4      1      1        5          2   10    9    8     mother            1\n5      2      3        3          8   10   10   10      other            2\n6      1      1        5          2   12   12   11     mother            1\n  studytime.y failures.y schoolsup.y famsup.y paid.y activities.y higher.y\n1           4          0         yes      yes    yes          yes      yes\n2           2          0         yes      yes     no           no      yes\n3           1          0         yes      yes     no          yes      yes\n4           3          0         yes      yes     no          yes      yes\n5           3          0          no      yes    yes          yes      yes\n6           3          0         yes      yes     no          yes      yes\n  romantic.y famrel.y freetime.y goout.y Dalc.y Walc.y health.y absences.y G1.y\n1         no        3          1       2      1      1        1          4   13\n2        yes        3          3       4      2      4        5          2   13\n3         no        4          3       1      1      1        2          8   14\n4         no        4          3       2      1      1        5          2   10\n5        yes        4          2       1      2      3        3          2   13\n6         no        4          3       2      1      1        5          2   11\n  G2.y G3.y\n1   13   13\n2   11   11\n3   13   12\n4   11   10\n5   13   13\n6   12   12\n\n\nSecond, we read in the data sets separately and then combine them using functions from the tidyverse. We use inner_join() on the variables used in the code from the website\n\ndata_mat &lt;- read_delim('student-mat.csv', delim = ';')\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_por &lt;- read_delim('student-por.csv', delim = ';')\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_join1 &lt;- inner_join(data_mat, data_por, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(data_mat, data_por, by = c(\"school\", \"sex\", \"age\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ndata_join1\n\n# A tibble: 382 × 53\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 372 more rows\n# ℹ 42 more variables: guardian.x &lt;chr&gt;, traveltime.x &lt;dbl&gt;, studytime.x &lt;dbl&gt;,\n#   failures.x &lt;dbl&gt;, schoolsup.x &lt;chr&gt;, famsup.x &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities.x &lt;chr&gt;, nursery &lt;chr&gt;, higher.x &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic.x &lt;chr&gt;, famrel.x &lt;dbl&gt;, freetime.x &lt;dbl&gt;, goout.x &lt;dbl&gt;,\n#   Dalc.x &lt;dbl&gt;, Walc.x &lt;dbl&gt;, health.x &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;,\n#   G2.x &lt;dbl&gt;, G3.x &lt;dbl&gt;, guardian.y &lt;chr&gt;, traveltime.y &lt;dbl&gt;, …\n\n\nThe problem we see is that row 79 of data_mat matches multiple rows of data-por. This means rows won’t be joined in a one-to-one fashion.\nNow we do an inner join on the math and portuguese data by all variables except G1, G2, G3, paid, and absences.\n\ndata_join2 &lt;- inner_join(data_mat, data_por, by = names(data_mat)[!(names(data_mat) %in% c('G1', 'G2', 'G3', 'paid', 'absences'))])\ndata_join2\n\n# A tibble: 320 × 38\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 4 GP     F        16 U       GT3     T           3     3 other    other  home  \n 5 GP     M        16 U       LE3     T           4     3 services other  reput…\n 6 GP     M        16 U       LE3     T           2     2 other    other  home  \n 7 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 8 GP     M        15 U       LE3     A           3     2 services other  home  \n 9 GP     M        15 U       GT3     T           3     4 other    other  home  \n10 GP     F        15 U       GT3     T           4     4 teacher  health reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nAs expected, there are 38 variables. 28 are the matched columns which we specified in the join. The remaining 10 variables comprise the 5 pairs of G1, G2, G3, paid, and absences variables, where one member of a pair is from the math data (those ending in .x) and the other member of the pair is from the portuguese data (those ending in .y).\nTo complete this task, we choose 4 categorical variables we are interested in and convert these to factors in each of data_mat, data_por, and data_join2 tibbles. We will chose school, sex, Medu, and Mjob as our categorical variables. We also choose names for some of the levels that are more interpretable than the default names.\n\ndata_mat &lt;- data_mat |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))\n\ndata_por &lt;- data_por |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))\n\ndata_join2 &lt;- data_join2 |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))\n\n\n\n\nOn the combined data set (data_join2) we look at how the data is stored and document any missing values.\nFirst, to look at how the data is stored, we call the tibble.\n\ndata_join2\n\n# A tibble: 320 × 38\n   school sex      age address famsize Pstatus Medu      Fedu Mjob  Fjob  reason\n   &lt;fct&gt;  &lt;fct&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;    &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; &lt;chr&gt; \n 1 GP     Female    18 U       GT3     A       Higher_…     4 at_h… teac… course\n 2 GP     Female    17 U       GT3     T       Primary      1 at_h… other course\n 3 GP     Female    15 U       GT3     T       Higher_…     2 heal… serv… home  \n 4 GP     Female    16 U       GT3     T       Seconda…     3 other other home  \n 5 GP     Male      16 U       LE3     T       Higher_…     3 serv… other reput…\n 6 GP     Male      16 U       LE3     T       5th_to_…     2 other other home  \n 7 GP     Female    17 U       GT3     A       Higher_…     4 other teac… home  \n 8 GP     Male      15 U       LE3     A       Seconda…     2 serv… other home  \n 9 GP     Male      15 U       GT3     T       Seconda…     4 other other home  \n10 GP     Female    15 U       GT3     T       Higher_…     4 teac… heal… reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nWe see our 4 chosen categorical variables from Task 1 are now stored as factors. Several variables are stored as doubles where they would be better represented as characters or factors. An example is Fedu, the father’s level of education. Since this variable takes on one of a small set of possible values, it is better represented as a categorical variable, rather than as a numeric variable as it is stored. Other variables that would be better represented as factors or characters but are stored as doubles include traveltime, studytime, and failures. famrel, freetime, goout, Dalc, Walc, and health are all stored as doubles. These variables take values on a Likert-type scale, which we learned in ST 517 can be treated as numeric or categorical, but the preference in that course was to treat them as categorical. Therefore, these may be better served by being stored as characters or factors. All of the above changes in data types in the tibble could be made with the methods of Task 1. We will not do this here since we are not using these variables in this assignment. Finally, we see the G1, G2, G3, absences, and paid variables (for both .x and .y) are appropriately stored as doubles.\nSecond, we can check for missing values using base R or tidyverse. First for base R.\n\ncolSums(is.na(data_join2))\n\n    school        sex        age    address    famsize    Pstatus       Medu \n         0          0          0          0          0          0          0 \n      Fedu       Mjob       Fjob     reason   guardian traveltime  studytime \n         0          0          0          0          0          0          0 \n  failures  schoolsup     famsup     paid.x activities    nursery     higher \n         0          0          0          0          0          0          0 \n  internet   romantic     famrel   freetime      goout       Dalc       Walc \n         0          0          0          0          0          0          0 \n    health absences.x       G1.x       G2.x       G3.x     paid.y absences.y \n         0          0          0          0          0          0          0 \n      G1.y       G2.y       G3.y \n         0          0          0 \n\n\nWe see from the output that there are no missing values.\nWe could check the same using the tidyverse.\n\nsum_na &lt;- function(v){\n  sum(is.na(v))\n}\n\ndata_join2 |&gt;\n  summarize(across(everything(), sum_na)) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n  guardian traveltime studytime failures schoolsup famsup paid.x activities\n     &lt;int&gt;      &lt;int&gt;     &lt;int&gt;    &lt;int&gt;     &lt;int&gt;  &lt;int&gt;  &lt;int&gt;      &lt;int&gt;\n1        0          0         0        0         0      0      0          0\n  nursery higher internet romantic famrel freetime goout  Dalc  Walc health\n    &lt;int&gt;  &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1       0      0        0        0      0        0     0     0     0      0\n  absences.x  G1.x  G2.x  G3.x paid.y absences.y  G1.y  G2.y  G3.y\n       &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1          0     0     0     0      0          0     0     0     0\n\n\nAgain, we find that there are no missing values in our data.\nNext we do some EDA for our categorical variables. We start with a one-way contingency table using school.\n\ntable(data_join2$school)\n\n\n GP  MS \n287  33 \n\n\nThe number 287 in the “GP” row is the number of students who go to the Gabriel Pereira school. From the output we see that far more students are in the “GP” school than in the “MS” school (287 vs. 33, respectively).\nNow we do a two-way contingency table using school and Medu.\n\ntable(data_join2$school, data_join2$Medu)\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP       114        66         78      27    2\n  MS         9         8          6      10    0\n\n\nThe number 114 at the intersection of the GP row and Higher_Ed column is the number of students at the “GP” school who had mothers who completed higher education. This number for the “GP” school is higher than for other education levels, suggesting that if a student goes to Gabriel Pereira, then the most likely education level of their mother is higher education.\nNext we create a three-way contingency table using school, Medu, and Mjob.\n\ntable(data_join2$school, data_join2$Medu, data_join2$Mjob)\n\n, ,  = at_home\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP         1         6         17      12    1\n  MS         1         1          2       3    0\n\n, ,  = health\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        24         3          2       1    0\n  MS         0         0          0       0    0\n\n, ,  = other\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        18        33         39      11    1\n  MS         3         1          3       7    0\n\n, ,  = services\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        23        23         20       3    0\n  MS         0         5          1       0    0\n\n, ,  = teacher\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        48         1          0       0    0\n  MS         5         1          0       0    0\n\n\nWe see from the output that we have a 2 by 5 by 5 array. The number at position [1,1,5] is the number of students at “GP” school whose mothers completed higher education and work as teachers. This number is 48. Examining the rest of the row containing this value, nearly all mothers of students at Gabriel Pereira who work as teachers completed higher education (specifically, all but one).\nNow we create a conditional two-way table using table(). We will create a two way table of school and Medu conditioned on Mjob. Specifically, we will condition on mothers job being teacher. We do this conditioning using two methods.\nFor the first method.\n\nconditioned_tbl &lt;- data_join2 |&gt;\n  filter(Mjob == 'teacher')\n\ntable(conditioned_tbl[,c('school', 'Medu')])\n\n      Medu\nschool Higher_Ed Secondary 5th_to_9th Primary None\n    GP        48         1          0       0    0\n    MS         5         1          0       0    0\n\n\nFor the second method.\n\ntable(data_join2$school, data_join2$Medu, data_join2$Mjob)[ , ,'teacher']\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        48         1          0       0    0\n  MS         5         1          0       0    0\n\n\nWe see both methods return the same conditional two-way table. This table shows us that regardless of the school a student attends, if their mother was a teacher, then their mother was likely to have completed higher education.\nNow we use dplyr to create a two-way contingency table. We will create the same two-way table we created above. We use the pivot_wider() function from tidyr to make the result look more like the output from table() function.\n\ndata_join2 |&gt;\n  group_by(school, Medu) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = Medu, values_from = count)\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 6\n# Groups:   school [2]\n  school Higher_Ed Secondary `5th_to_9th` Primary  None\n  &lt;fct&gt;      &lt;int&gt;     &lt;int&gt;        &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n1 GP           114        66           78      27     2\n2 MS             9         8            6      10    NA\n\n\nWe see that this is identical to the two-way table for school and Medu created above with the table() function, except that there is an NA where we want a zero. We can easily fix this with the replace_na() function from tidyr package.\n\ndata_join2 |&gt;\n  group_by(school, Medu) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = Medu, values_from = count) |&gt;\n  replace_na(list(None = 0))\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 6\n# Groups:   school [2]\n  school Higher_Ed Secondary `5th_to_9th` Primary  None\n  &lt;fct&gt;      &lt;int&gt;     &lt;int&gt;        &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n1 GP           114        66           78      27     2\n2 MS             9         8            6      10     0\n\n\nThe final task we will do with categorical data is to create a stacked bar graph and side-by-side bar graph. We will do this with the variables Medu and school.\nFirst we create the stacked bar graph.\n\ndata_join2 |&gt;\n  ggplot(aes(Medu)) + geom_bar(aes(fill = school)) + labs(x = 'Mother\\'s Education Level', y = 'Counts', title = 'Distribution of Students\\' Mother\\'s Level of Education by School')\n\n\n\n\n\n\n\n\nNext we create the side-by-side bar graph. We can use the same code but add a position argument.\n\ndata_join2 |&gt;\n  ggplot(aes(Medu)) + geom_bar(aes(fill = school), position = 'dodge') + labs(x = 'Mother\\'s Education Level', y = 'Counts', title = 'Distribution of Students\\' Mother\\'s Level of Education by School')\n\n\n\n\n\n\n\n\nViewing the plots, we gather a lot of the same information we discussed when creating contingency tables (the numerical summary for categorical data). We can see that the mothers of students at the Gabriel Pereira school have high rates of higher education. Whereas for students at the Mousinho da Silveira school, the distribution of education levels is relatively uniform.\nNow it is time for some EDA on numeric variables. The numeric variables are age, absences, and the three test grade variables (G1, G2, and G3) from each data set (math and Portuguese). There are two each for G1, G2, G3, and absences, since there is a math value and a Portuguese value for each variable. There is only one age variable. This gives a total of 9 numeric variables in the data_join2 data set.\nFirst we find measures of center and spread for 3 of these variables. We will use absences.x, absences.y, and G3.x. We will use mean and median as our measures of center, and we will use standard deviation (sd) and interquartile range (IQR) as our measures of spread. We return the desired values in a tibble.\n\ndata_join2 |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 12\n  mean_absences.x median_absences.x sd_absences.x IQR_absences.x mean_absences.y\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1            5.41                 4          7.84           7.25            3.25\n  median_absences.y sd_absences.y IQR_absences.y mean_G3.x median_G3.x sd_G3.x\n              &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1                 2          4.56              4      11.0          11    4.30\n  IQR_G3.x\n     &lt;dbl&gt;\n1        5\n\n\nThe output suggests that students may have fewer absences and less variability in absences in Portuguese class than in math class. We of course would need to conduct a statistical test to confirm.\nWe will subset the data to find measures of center and spread for only those students who had at least one absence.\n\ndata_join2 |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  filter(absences.x &gt; 0,\n         absences.y &gt; 0) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 12\n  mean_absences.x median_absences.x sd_absences.x IQR_absences.x mean_absences.y\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1            9.20                 6          9.75              8            5.91\n  median_absences.y sd_absences.y IQR_absences.y mean_G3.x median_G3.x sd_G3.x\n              &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1                 4          5.04           5.25      11.6          11    3.43\n  IQR_G3.x\n     &lt;dbl&gt;\n1        5\n\n\nIn this subset of students with at least one absence, we again see that students may have fewer absences and less variability in absences in Portuguese class than in math class. Like the un-subsetted case above, we would need a statistical test to confirm.\nNext we find the same measures of center and spread for the same variables, but we do so across the grouping variable school.\n\ndata_join2 |&gt;\n  group_by(school) |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\nAdding missing grouping variables: `school`\n\n\n# A tibble: 2 × 13\n  school mean_absences.x median_absences.x sd_absences.x IQR_absences.x\n  &lt;fct&gt;            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 GP                5.64                 4          8.10              8\n2 MS                3.42                 2          4.55              4\n  mean_absences.y median_absences.y sd_absences.y IQR_absences.y mean_G3.x\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n1            3.34                 2          4.72              4     11.2 \n2            2.39                 2          2.66              4      9.88\n  median_G3.x sd_G3.x IQR_G3.x\n        &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1          11    4.27        5\n2          10    4.44        4\n\n\nThe mean number of absences in math class appear higher for Gabriel Pereira students than Mousinho da Silveira students, and yet students in Gabriel Pereira have higher mean math scores (G3.x). Again, we need statistical tests to confirm these differences.\nNow we find measures of center and spread for the same 3 variables across two grouping variables: school and sex.\n\ndata_join2 |&gt;\n  group_by(school, sex) |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\nAdding missing grouping variables: `school`, `sex`\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 14\n# Groups:   school [2]\n  school sex    mean_absences.x median_absences.x sd_absences.x IQR_absences.x\n  &lt;fct&gt;  &lt;fct&gt;            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 GP     Female            6.12               4            9.80           7   \n2 GP     Male              5.10               4            5.55           6.75\n3 MS     Female            3.33               0            5.04           4   \n4 MS     Male              3.58               3.5          3.73           2.5 \n  mean_absences.y median_absences.y sd_absences.y IQR_absences.y mean_G3.x\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n1            3.61               2            5.18              6     10.5 \n2            3.04               2            4.12              4     12.0 \n3            2.48               1            2.94              4     10.0 \n4            2.25               2.5          2.18              4      9.58\n  median_G3.x sd_G3.x IQR_G3.x\n        &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1          11    4.43      5  \n2          12    3.96      5  \n3          10    4.63      3  \n4          10    4.27      4.5\n\n\nIt appears from the output that female students at Gabriel Pereira may have lower math scores on average than male students, but that there is no difference in math scores between male and female students at Mousinho da Silveira. Again, we emphasize statistical tests are needed to assess the probability that the observed difference in mean/median test scores is do to sampling variability rather than true population differences.\nNext we create a correlation matrix between all the numeric variables.\n\ndata_join2 |&gt;\n  select(age, G1.x, G2.x, G3.x, absences.x, G1.y, G2.y, G3.y, absences.y) |&gt;\n  cor()\n\n                    age        G1.x        G2.x        G3.x  absences.x\nage         1.000000000 -0.11037935 -0.18618740 -0.20603186  0.14392517\nG1.x       -0.110379348  1.00000000  0.86588796  0.81859418 -0.06946116\nG2.x       -0.186187399  0.86588796  1.00000000  0.91357599 -0.07580245\nG3.x       -0.206031862  0.81859418  0.91357599  1.00000000 -0.02811847\nabsences.x  0.143925170 -0.06946116 -0.07580245 -0.02811847  1.00000000\nG1.y       -0.050549678  0.59293522  0.54300736  0.52288461 -0.09247761\nG2.y        0.029366456  0.59517224  0.56521350  0.54545279 -0.14516402\nG3.y       -0.009103257  0.54388734  0.49603265  0.47595650 -0.13572638\nabsences.y  0.047331821 -0.08760610 -0.12636236 -0.11664046  0.56381559\n                  G1.y        G2.y         G3.y  absences.y\nage        -0.05054968  0.02936646 -0.009103257  0.04733182\nG1.x        0.59293522  0.59517224  0.543887345 -0.08760610\nG2.x        0.54300736  0.56521350  0.496032649 -0.12636236\nG3.x        0.52288461  0.54545279  0.475956497 -0.11664046\nabsences.x -0.09247761 -0.14516402 -0.135726385  0.56381559\nG1.y        1.00000000  0.88415041  0.825414320 -0.09864117\nG2.y        0.88415041  1.00000000  0.894309821 -0.12070727\nG3.y        0.82541432  0.89430982  1.000000000 -0.07145201\nabsences.y -0.09864117 -0.12070727 -0.071452010  1.00000000\n\n\nInteresting fact…"
  },
  {
    "objectID": "Homework5.html#task-1-read-in-the-data-and-modify",
    "href": "Homework5.html#task-1-read-in-the-data-and-modify",
    "title": "Homework 5",
    "section": "",
    "text": "We start Task 1 by reading in the data in two different ways.\nFirst, we modify the code provided with the download to read in the data from a local file source and combine the two data frames. We use local paths.\n\nd1=read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nhead(d3)\n\n  school sex age address famsize Pstatus Medu Fedu     Mjob     Fjob     reason\n1     GP   F  15       R     GT3       T    1    1  at_home    other       home\n2     GP   F  15       R     GT3       T    1    1    other    other reputation\n3     GP   F  15       R     GT3       T    2    2  at_home    other reputation\n4     GP   F  15       R     GT3       T    2    4 services   health     course\n5     GP   F  15       R     GT3       T    3    3 services services reputation\n6     GP   F  15       R     GT3       T    3    4 services   health     course\n  nursery internet guardian.x traveltime.x studytime.x failures.x schoolsup.x\n1     yes      yes     mother            2           4          1         yes\n2      no      yes     mother            1           2          2         yes\n3     yes       no     mother            1           1          0         yes\n4     yes      yes     mother            1           3          0         yes\n5     yes      yes      other            2           3          2          no\n6     yes      yes     mother            1           3          0         yes\n  famsup.x paid.x activities.x higher.x romantic.x famrel.x freetime.x goout.x\n1      yes    yes          yes      yes         no        3          1       2\n2      yes     no           no      yes        yes        3          3       4\n3      yes    yes          yes      yes         no        4          3       1\n4      yes    yes          yes      yes         no        4          3       2\n5      yes    yes          yes      yes        yes        4          2       1\n6      yes    yes          yes      yes         no        4          3       2\n  Dalc.x Walc.x health.x absences.x G1.x G2.x G3.x guardian.y traveltime.y\n1      1      1        1          2    7   10   10     mother            2\n2      2      4        5          2    8    6    5     mother            1\n3      1      1        2          8   14   13   13     mother            1\n4      1      1        5          2   10    9    8     mother            1\n5      2      3        3          8   10   10   10      other            2\n6      1      1        5          2   12   12   11     mother            1\n  studytime.y failures.y schoolsup.y famsup.y paid.y activities.y higher.y\n1           4          0         yes      yes    yes          yes      yes\n2           2          0         yes      yes     no           no      yes\n3           1          0         yes      yes     no          yes      yes\n4           3          0         yes      yes     no          yes      yes\n5           3          0          no      yes    yes          yes      yes\n6           3          0         yes      yes     no          yes      yes\n  romantic.y famrel.y freetime.y goout.y Dalc.y Walc.y health.y absences.y G1.y\n1         no        3          1       2      1      1        1          4   13\n2        yes        3          3       4      2      4        5          2   13\n3         no        4          3       1      1      1        2          8   14\n4         no        4          3       2      1      1        5          2   10\n5        yes        4          2       1      2      3        3          2   13\n6         no        4          3       2      1      1        5          2   11\n  G2.y G3.y\n1   13   13\n2   11   11\n3   13   12\n4   11   10\n5   13   13\n6   12   12\n\n\nSecond, we read in the data sets separately and then combine them using functions from the tidyverse. We use inner_join() on the variables used in the code from the website\n\ndata_mat &lt;- read_delim('student-mat.csv', delim = ';')\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_por &lt;- read_delim('student-por.csv', delim = ';')\n\nRows: 649 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_join1 &lt;- inner_join(data_mat, data_por, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(data_mat, data_por, by = c(\"school\", \"sex\", \"age\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ndata_join1\n\n# A tibble: 382 × 53\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 372 more rows\n# ℹ 42 more variables: guardian.x &lt;chr&gt;, traveltime.x &lt;dbl&gt;, studytime.x &lt;dbl&gt;,\n#   failures.x &lt;dbl&gt;, schoolsup.x &lt;chr&gt;, famsup.x &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities.x &lt;chr&gt;, nursery &lt;chr&gt;, higher.x &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic.x &lt;chr&gt;, famrel.x &lt;dbl&gt;, freetime.x &lt;dbl&gt;, goout.x &lt;dbl&gt;,\n#   Dalc.x &lt;dbl&gt;, Walc.x &lt;dbl&gt;, health.x &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;,\n#   G2.x &lt;dbl&gt;, G3.x &lt;dbl&gt;, guardian.y &lt;chr&gt;, traveltime.y &lt;dbl&gt;, …\n\n\nThe problem we see is that row 79 of data_mat matches multiple rows of data-por. This means rows won’t be joined in a one-to-one fashion.\nNow we do an inner join on the math and portuguese data by all variables except G1, G2, G3, paid, and absences.\n\ndata_join2 &lt;- inner_join(data_mat, data_por, by = names(data_mat)[!(names(data_mat) %in% c('G1', 'G2', 'G3', 'paid', 'absences'))])\ndata_join2\n\n# A tibble: 320 × 38\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 4 GP     F        16 U       GT3     T           3     3 other    other  home  \n 5 GP     M        16 U       LE3     T           4     3 services other  reput…\n 6 GP     M        16 U       LE3     T           2     2 other    other  home  \n 7 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 8 GP     M        15 U       LE3     A           3     2 services other  home  \n 9 GP     M        15 U       GT3     T           3     4 other    other  home  \n10 GP     F        15 U       GT3     T           4     4 teacher  health reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nAs expected, there are 38 variables. 28 are the matched columns which we specified in the join. The remaining 10 variables comprise the 5 pairs of G1, G2, G3, paid, and absences variables, where one member of a pair is from the math data (those ending in .x) and the other member of the pair is from the portuguese data (those ending in .y).\nTo complete this task, we choose 4 categorical variables we are interested in and convert these to factors in each of data_mat, data_por, and data_join2 tibbles. We will chose school, sex, Medu, and Mjob as our categorical variables. We also choose names for some of the levels that are more interpretable than the default names.\n\ndata_mat &lt;- data_mat |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))\n\ndata_por &lt;- data_por |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))\n\ndata_join2 &lt;- data_join2 |&gt;\n  mutate(school = as.factor(school),\n         sex = factor(sex, levels = c('F', 'M'), labels = c('Female', 'Male')),\n         Medu = factor(Medu, levels = c(4, 3, 2, 1, 0), labels = c('Higher_Ed', 'Secondary', '5th_to_9th', 'Primary', 'None')),\n         Mjob = as.factor(Mjob))"
  },
  {
    "objectID": "Homework5.html#task-2-summarize-the-data-very-basic-eda",
    "href": "Homework5.html#task-2-summarize-the-data-very-basic-eda",
    "title": "Homework 5",
    "section": "",
    "text": "On the combined data set (data_join2) we look at how the data is stored and document any missing values.\nFirst, to look at how the data is stored, we call the tibble.\n\ndata_join2\n\n# A tibble: 320 × 38\n   school sex      age address famsize Pstatus Medu      Fedu Mjob  Fjob  reason\n   &lt;fct&gt;  &lt;fct&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;fct&gt;    &lt;dbl&gt; &lt;fct&gt; &lt;chr&gt; &lt;chr&gt; \n 1 GP     Female    18 U       GT3     A       Higher_…     4 at_h… teac… course\n 2 GP     Female    17 U       GT3     T       Primary      1 at_h… other course\n 3 GP     Female    15 U       GT3     T       Higher_…     2 heal… serv… home  \n 4 GP     Female    16 U       GT3     T       Seconda…     3 other other home  \n 5 GP     Male      16 U       LE3     T       Higher_…     3 serv… other reput…\n 6 GP     Male      16 U       LE3     T       5th_to_…     2 other other home  \n 7 GP     Female    17 U       GT3     A       Higher_…     4 other teac… home  \n 8 GP     Male      15 U       LE3     A       Seconda…     2 serv… other home  \n 9 GP     Male      15 U       GT3     T       Seconda…     4 other other home  \n10 GP     Female    15 U       GT3     T       Higher_…     4 teac… heal… reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nWe see our 4 chosen categorical variables from Task 1 are now stored as factors. Several variables are stored as doubles where they would be better represented as characters or factors. An example is Fedu, the father’s level of education. Since this variable takes on one of a small set of possible values, it is better represented as a categorical variable, rather than as a numeric variable as it is stored. Other variables that would be better represented as factors or characters but are stored as doubles include traveltime, studytime, and failures. famrel, freetime, goout, Dalc, Walc, and health are all stored as doubles. These variables take values on a Likert-type scale, which we learned in ST 517 can be treated as numeric or categorical, but the preference in that course was to treat them as categorical. Therefore, these may be better served by being stored as characters or factors. All of the above changes in data types in the tibble could be made with the methods of Task 1. We will not do this here since we are not using these variables in this assignment. Finally, we see the G1, G2, G3, absences, and paid variables (for both .x and .y) are appropriately stored as doubles.\nSecond, we can check for missing values using base R or tidyverse. First for base R.\n\ncolSums(is.na(data_join2))\n\n    school        sex        age    address    famsize    Pstatus       Medu \n         0          0          0          0          0          0          0 \n      Fedu       Mjob       Fjob     reason   guardian traveltime  studytime \n         0          0          0          0          0          0          0 \n  failures  schoolsup     famsup     paid.x activities    nursery     higher \n         0          0          0          0          0          0          0 \n  internet   romantic     famrel   freetime      goout       Dalc       Walc \n         0          0          0          0          0          0          0 \n    health absences.x       G1.x       G2.x       G3.x     paid.y absences.y \n         0          0          0          0          0          0          0 \n      G1.y       G2.y       G3.y \n         0          0          0 \n\n\nWe see from the output that there are no missing values.\nWe could check the same using the tidyverse.\n\nsum_na &lt;- function(v){\n  sum(is.na(v))\n}\n\ndata_join2 |&gt;\n  summarize(across(everything(), sum_na)) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n  guardian traveltime studytime failures schoolsup famsup paid.x activities\n     &lt;int&gt;      &lt;int&gt;     &lt;int&gt;    &lt;int&gt;     &lt;int&gt;  &lt;int&gt;  &lt;int&gt;      &lt;int&gt;\n1        0          0         0        0         0      0      0          0\n  nursery higher internet romantic famrel freetime goout  Dalc  Walc health\n    &lt;int&gt;  &lt;int&gt;    &lt;int&gt;    &lt;int&gt;  &lt;int&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1       0      0        0        0      0        0     0     0     0      0\n  absences.x  G1.x  G2.x  G3.x paid.y absences.y  G1.y  G2.y  G3.y\n       &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1          0     0     0     0      0          0     0     0     0\n\n\nAgain, we find that there are no missing values in our data.\nNext we do some EDA for our categorical variables. We start with a one-way contingency table using school.\n\ntable(data_join2$school)\n\n\n GP  MS \n287  33 \n\n\nThe number 287 in the “GP” row is the number of students who go to the Gabriel Pereira school. From the output we see that far more students are in the “GP” school than in the “MS” school (287 vs. 33, respectively).\nNow we do a two-way contingency table using school and Medu.\n\ntable(data_join2$school, data_join2$Medu)\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP       114        66         78      27    2\n  MS         9         8          6      10    0\n\n\nThe number 114 at the intersection of the GP row and Higher_Ed column is the number of students at the “GP” school who had mothers who completed higher education. This number for the “GP” school is higher than for other education levels, suggesting that if a student goes to Gabriel Pereira, then the most likely education level of their mother is higher education.\nNext we create a three-way contingency table using school, Medu, and Mjob.\n\ntable(data_join2$school, data_join2$Medu, data_join2$Mjob)\n\n, ,  = at_home\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP         1         6         17      12    1\n  MS         1         1          2       3    0\n\n, ,  = health\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        24         3          2       1    0\n  MS         0         0          0       0    0\n\n, ,  = other\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        18        33         39      11    1\n  MS         3         1          3       7    0\n\n, ,  = services\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        23        23         20       3    0\n  MS         0         5          1       0    0\n\n, ,  = teacher\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        48         1          0       0    0\n  MS         5         1          0       0    0\n\n\nWe see from the output that we have a 2 by 5 by 5 array. The number at position [1,1,5] is the number of students at “GP” school whose mothers completed higher education and work as teachers. This number is 48. Examining the rest of the row containing this value, nearly all mothers of students at Gabriel Pereira who work as teachers completed higher education (specifically, all but one).\nNow we create a conditional two-way table using table(). We will create a two way table of school and Medu conditioned on Mjob. Specifically, we will condition on mothers job being teacher. We do this conditioning using two methods.\nFor the first method.\n\nconditioned_tbl &lt;- data_join2 |&gt;\n  filter(Mjob == 'teacher')\n\ntable(conditioned_tbl[,c('school', 'Medu')])\n\n      Medu\nschool Higher_Ed Secondary 5th_to_9th Primary None\n    GP        48         1          0       0    0\n    MS         5         1          0       0    0\n\n\nFor the second method.\n\ntable(data_join2$school, data_join2$Medu, data_join2$Mjob)[ , ,'teacher']\n\n    \n     Higher_Ed Secondary 5th_to_9th Primary None\n  GP        48         1          0       0    0\n  MS         5         1          0       0    0\n\n\nWe see both methods return the same conditional two-way table. This table shows us that regardless of the school a student attends, if their mother was a teacher, then their mother was likely to have completed higher education.\nNow we use dplyr to create a two-way contingency table. We will create the same two-way table we created above. We use the pivot_wider() function from tidyr to make the result look more like the output from table() function.\n\ndata_join2 |&gt;\n  group_by(school, Medu) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = Medu, values_from = count)\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 6\n# Groups:   school [2]\n  school Higher_Ed Secondary `5th_to_9th` Primary  None\n  &lt;fct&gt;      &lt;int&gt;     &lt;int&gt;        &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n1 GP           114        66           78      27     2\n2 MS             9         8            6      10    NA\n\n\nWe see that this is identical to the two-way table for school and Medu created above with the table() function, except that there is an NA where we want a zero. We can easily fix this with the replace_na() function from tidyr package.\n\ndata_join2 |&gt;\n  group_by(school, Medu) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = Medu, values_from = count) |&gt;\n  replace_na(list(None = 0))\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 6\n# Groups:   school [2]\n  school Higher_Ed Secondary `5th_to_9th` Primary  None\n  &lt;fct&gt;      &lt;int&gt;     &lt;int&gt;        &lt;int&gt;   &lt;int&gt; &lt;int&gt;\n1 GP           114        66           78      27     2\n2 MS             9         8            6      10     0\n\n\nThe final task we will do with categorical data is to create a stacked bar graph and side-by-side bar graph. We will do this with the variables Medu and school.\nFirst we create the stacked bar graph.\n\ndata_join2 |&gt;\n  ggplot(aes(Medu)) + geom_bar(aes(fill = school)) + labs(x = 'Mother\\'s Education Level', y = 'Counts', title = 'Distribution of Students\\' Mother\\'s Level of Education by School')\n\n\n\n\n\n\n\n\nNext we create the side-by-side bar graph. We can use the same code but add a position argument.\n\ndata_join2 |&gt;\n  ggplot(aes(Medu)) + geom_bar(aes(fill = school), position = 'dodge') + labs(x = 'Mother\\'s Education Level', y = 'Counts', title = 'Distribution of Students\\' Mother\\'s Level of Education by School')\n\n\n\n\n\n\n\n\nViewing the plots, we gather a lot of the same information we discussed when creating contingency tables (the numerical summary for categorical data). We can see that the mothers of students at the Gabriel Pereira school have high rates of higher education. Whereas for students at the Mousinho da Silveira school, the distribution of education levels is relatively uniform.\nNow it is time for some EDA on numeric variables. The numeric variables are age, absences, and the three test grade variables (G1, G2, and G3) from each data set (math and Portuguese). There are two each for G1, G2, G3, and absences, since there is a math value and a Portuguese value for each variable. There is only one age variable. This gives a total of 9 numeric variables in the data_join2 data set.\nFirst we find measures of center and spread for 3 of these variables. We will use absences.x, absences.y, and G3.x. We will use mean and median as our measures of center, and we will use standard deviation (sd) and interquartile range (IQR) as our measures of spread. We return the desired values in a tibble.\n\ndata_join2 |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 12\n  mean_absences.x median_absences.x sd_absences.x IQR_absences.x mean_absences.y\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1            5.41                 4          7.84           7.25            3.25\n  median_absences.y sd_absences.y IQR_absences.y mean_G3.x median_G3.x sd_G3.x\n              &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1                 2          4.56              4      11.0          11    4.30\n  IQR_G3.x\n     &lt;dbl&gt;\n1        5\n\n\nThe output suggests that students may have fewer absences and less variability in absences in Portuguese class than in math class. We of course would need to conduct a statistical test to confirm.\nWe will subset the data to find measures of center and spread for only those students who had at least one absence.\n\ndata_join2 |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  filter(absences.x &gt; 0,\n         absences.y &gt; 0) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\n# A tibble: 1 × 12\n  mean_absences.x median_absences.x sd_absences.x IQR_absences.x mean_absences.y\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;\n1            9.20                 6          9.75              8            5.91\n  median_absences.y sd_absences.y IQR_absences.y mean_G3.x median_G3.x sd_G3.x\n              &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;\n1                 4          5.04           5.25      11.6          11    3.43\n  IQR_G3.x\n     &lt;dbl&gt;\n1        5\n\n\nIn this subset of students with at least one absence, we again see that students may have fewer absences and less variability in absences in Portuguese class than in math class. Like the un-subsetted case above, we would need a statistical test to confirm.\nNext we find the same measures of center and spread for the same variables, but we do so across the grouping variable school.\n\ndata_join2 |&gt;\n  group_by(school) |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\nAdding missing grouping variables: `school`\n\n\n# A tibble: 2 × 13\n  school mean_absences.x median_absences.x sd_absences.x IQR_absences.x\n  &lt;fct&gt;            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 GP                5.64                 4          8.10              8\n2 MS                3.42                 2          4.55              4\n  mean_absences.y median_absences.y sd_absences.y IQR_absences.y mean_G3.x\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n1            3.34                 2          4.72              4     11.2 \n2            2.39                 2          2.66              4      9.88\n  median_G3.x sd_G3.x IQR_G3.x\n        &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1          11    4.27        5\n2          10    4.44        4\n\n\nThe mean number of absences in math class appear higher for Gabriel Pereira students than Mousinho da Silveira students, and yet students in Gabriel Pereira have higher mean math scores (G3.x). Again, we need statistical tests to confirm these differences.\nNow we find measures of center and spread for the same 3 variables across two grouping variables: school and sex.\n\ndata_join2 |&gt;\n  group_by(school, sex) |&gt;\n  select(absences.x, absences.y, G3.x) |&gt;\n  summarize(across(everything(), \n            .fns = list('mean' = mean, 'median' = median, 'sd' = sd, 'IQR' = IQR),\n            .names = '{.fn}_{.col}')) |&gt;\n  print(width = Inf)\n\nAdding missing grouping variables: `school`, `sex`\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 14\n# Groups:   school [2]\n  school sex    mean_absences.x median_absences.x sd_absences.x IQR_absences.x\n  &lt;fct&gt;  &lt;fct&gt;            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 GP     Female            6.12               4            9.80           7   \n2 GP     Male              5.10               4            5.55           6.75\n3 MS     Female            3.33               0            5.04           4   \n4 MS     Male              3.58               3.5          3.73           2.5 \n  mean_absences.y median_absences.y sd_absences.y IQR_absences.y mean_G3.x\n            &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n1            3.61               2            5.18              6     10.5 \n2            3.04               2            4.12              4     12.0 \n3            2.48               1            2.94              4     10.0 \n4            2.25               2.5          2.18              4      9.58\n  median_G3.x sd_G3.x IQR_G3.x\n        &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1          11    4.43      5  \n2          12    3.96      5  \n3          10    4.63      3  \n4          10    4.27      4.5\n\n\nIt appears from the output that female students at Gabriel Pereira may have lower math scores on average than male students, but that there is no difference in math scores between male and female students at Mousinho da Silveira. Again, we emphasize statistical tests are needed to assess the probability that the observed difference in mean/median test scores is do to sampling variability rather than true population differences.\nNext we create a correlation matrix between all the numeric variables.\n\ndata_join2 |&gt;\n  select(age, G1.x, G2.x, G3.x, absences.x, G1.y, G2.y, G3.y, absences.y) |&gt;\n  cor()\n\n                    age        G1.x        G2.x        G3.x  absences.x\nage         1.000000000 -0.11037935 -0.18618740 -0.20603186  0.14392517\nG1.x       -0.110379348  1.00000000  0.86588796  0.81859418 -0.06946116\nG2.x       -0.186187399  0.86588796  1.00000000  0.91357599 -0.07580245\nG3.x       -0.206031862  0.81859418  0.91357599  1.00000000 -0.02811847\nabsences.x  0.143925170 -0.06946116 -0.07580245 -0.02811847  1.00000000\nG1.y       -0.050549678  0.59293522  0.54300736  0.52288461 -0.09247761\nG2.y        0.029366456  0.59517224  0.56521350  0.54545279 -0.14516402\nG3.y       -0.009103257  0.54388734  0.49603265  0.47595650 -0.13572638\nabsences.y  0.047331821 -0.08760610 -0.12636236 -0.11664046  0.56381559\n                  G1.y        G2.y         G3.y  absences.y\nage        -0.05054968  0.02936646 -0.009103257  0.04733182\nG1.x        0.59293522  0.59517224  0.543887345 -0.08760610\nG2.x        0.54300736  0.56521350  0.496032649 -0.12636236\nG3.x        0.52288461  0.54545279  0.475956497 -0.11664046\nabsences.x -0.09247761 -0.14516402 -0.135726385  0.56381559\nG1.y        1.00000000  0.88415041  0.825414320 -0.09864117\nG2.y        0.88415041  1.00000000  0.894309821 -0.12070727\nG3.y        0.82541432  0.89430982  1.000000000 -0.07145201\nabsences.y -0.09864117 -0.12070727 -0.071452010  1.00000000\n\n\nInteresting fact…"
  }
]